function [SOMnet, SOMoutput] = performSOM(x, Nneurons1, Nneurons2)
% Solve a Clustering Problem with a Self-Organizing Map
% Script generated by Neural Clustering app
% Created 20-Apr-2016 10:17:19
%
% This script assumes these variables are defined:
%
%   eig1 - input data.

% Create a Self-Organizing Map
dimension1 = Nneurons1;
dimension2 = Nneurons2;
SOMnet = selforgmap([dimension1 dimension2], 250000);

% Choose Plot Functions
% For a list of all plot functions type: help nnplot
SOMnet.plotFcns = {'plotsomtop','plotsomnc','plotsomnd', ...
    'plotsomplanes', 'plotsomhits', 'plotsompos'};

% Train the Network
[SOMnet,tr] = train(SOMnet,x);

% Test the Network
SOMoutput = SOMnet(x);

% View the Network
%view(net)

%% Plots
% Uncomment these lines to enable various plots.
%figure, plotsomtop(SOMnet)
%figure, plotsomnc(SOMnet)
%figure, subplot(2,1,1);plotsomnd(SOMnet); 
%figure, plotsomplanes(SOMnet)
%figure, subplot(2,1,2);plotsomhits(SOMnet,x)
%figure, plotsompos(SOMnet,x)
%%
% Deployment
% Change the (false) values to (true) to enable the following code blocks.
% See the help for each generation function for more information.
if (false)
    % Generate MATLAB function for neural network for application
    % deployment in MATLAB scripts or with MATLAB Compiler and Builder
    % tools, or simply to examine the calculations your trained neural
    % network performs.
    genFunction(net,'myNeuralNetworkFunction');
    y = myNeuralNetworkFunction(x);
end
if (false)
    % Generate a matrix-only MATLAB function for neural network code
    % generation with MATLAB Coder tools.
    genFunction(net,'myNeuralNetworkFunction','MatrixOnly','yes');
    y = myNeuralNetworkFunction(x);
end
if (false)
    % Generate a Simulink diagram for simulation or deployment with.
    % Simulink Coder tools.
    gensim(net);
end
